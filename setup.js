// setup.js - Script de configura√ß√£o inicial
const mysql = require('mysql2/promise');
const bcrypt = require('bcrypt');
const fs = require('fs').promises;
const path = require('path');


async function setup() {
    console.log('üöÄ Iniciando configura√ß√£o do Lalu Dev Backend...\n');

    try {
        // 1. Criar diret√≥rios necess√°rios
        console.log('üìÅ Criando diret√≥rios...');
        await fs.mkdir('uploads/projetos', { recursive: true });
        await fs.mkdir('public', { recursive: true });
        console.log('‚úÖ Diret√≥rios criados!\n');

        // 2. Conectar ao banco MySQL
    console.log('üóÑÔ∏è  Conectando ao banco MySQL...');
const connection = await mysql.createConnection({
    host: process.env.DB_HOST,       // Railway vai fornecer automaticamente
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
    port: process.env.DB_PORT,
    database: process.env.DB_NAME    // importante incluir o nome do banco
});
    console.log('‚úÖ Conectado ao MySQL!');

        // 3. Criar tabelas
        console.log('üìã Criando tabelas...');
        
        // Tabela de administradores
        await connection.execute(`
            CREATE TABLE IF NOT EXISTS administradores (
                id INT AUTO_INCREMENT PRIMARY KEY,
                usuario VARCHAR(50) UNIQUE NOT NULL,
                senha_hash VARCHAR(255) NOT NULL,
                criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        `);

        // Tabela de projetos
        await connection.execute(`
            CREATE TABLE IF NOT EXISTS projetos (
                id INT AUTO_INCREMENT PRIMARY KEY,
                titulo VARCHAR(255) NOT NULL,
                descricao TEXT NOT NULL,
                tecnologias JSON NOT NULL,
                link_projeto VARCHAR(500),
                link_github VARCHAR(500),
                imagem VARCHAR(255),
                ativo BOOLEAN DEFAULT true,
                criado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                atualizado_em TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
            )
        `);
        console.log('‚úÖ Tabelas criadas!\n');

// 5. Criar usu√°rio administrador
console.log('üë§ Configurando administrador...');

const usuarioAdmin = 'admin';
const senhaAdmin = process.env.ADMIN_PASSWORD;
const senhaHash = await bcrypt.hash(senhaAdmin, 10);

// Inserir administrador no banco
await connection.execute(`
    INSERT INTO administradores (usuario, senha_hash) 
    VALUES (?, ?)
    ON DUPLICATE KEY UPDATE senha_hash = VALUES(senha_hash)
`, [usuarioAdmin, senhaHash]);

console.log(`‚úÖ Administrador configurado!`);
console.log(`   Usu√°rio: ${usuarioAdmin}`);
console.log(`   Senha: ${senhaAdmin}\n`);

// Encerrar conex√£o
await connection.end();


        // 6. Verificar arquivos HTML
        console.log('üìÑ Verificando arquivos HTML...');
        const arquivosObrigatorios = [
            'public/index.html',
            'public/admin.html', 
            'public/admin-form.html',
            'public/projetos.html'
        ];

        for (const arquivo of arquivosObrigatorios) {
            try {
                await fs.access(arquivo);
                console.log(`‚úÖ ${arquivo} encontrado`);
            } catch {
                console.log(`‚ö†Ô∏è  ${arquivo} n√£o encontrado - voc√™ precisa criar este arquivo`);
            }
        }

        console.log('\nüéâ CONFIGURA√á√ÉO CONCLU√çDA!');
        console.log('\nüìã PR√ìXIMOS PASSOS:');
        console.log('1. Configure suas vari√°veis no arquivo .env');
        console.log('2. Mova seus arquivos HTML para a pasta public/');
        console.log('3. Execute: npm run dev');
        console.log('4. Acesse: http://localhost:3000');
        console.log('\nüîê LOGIN DO ADMINISTRADOR:');
        console.log(`   Usu√°rio: ${usuarioAdmin}`);
        console.log(`   Senha: ${senhaAdmin}`);
        console.log('\n‚ö†Ô∏è  IMPORTANTE: Altere a senha padr√£o em produ√ß√£o!');

    } catch (error) {
        console.error('‚ùå Erro na configura√ß√£o:', error);
        console.log('\nüîß POSS√çVEIS SOLU√á√ïES:');
        console.log('‚Ä¢ Verifique se o MySQL est√° rodando');
        console.log('‚Ä¢ Confira as credenciais no arquivo .env');
        console.log('‚Ä¢ Certifique-se que o usu√°rio MySQL tem permiss√µes');
    }
}

// Executar configura√ß√£o
setup();
